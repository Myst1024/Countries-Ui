{"version":3,"sources":["components/Header.js","components/SearchType.js","components/SearchBar.js","components/SubmitButton.js","components/Country.js","components/CountryList.js","components/Regions.js","components/Totals.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","Typography","variant","component","gutterBottom","SearchType","_ref","searchType","setSearchType","FormControl","FormLabel","RadioGroup","aria-label","name","value","onChange","event","target","FormControlLabel","control","Radio","label","SearchBar","query","setQuery","friendlyTypeName","TextField","id","margin","SubmitButton","submitSearch","Button","type","color","onClick","Country","country","Card","CardContent","alt","src","flag","alpha2Code","alpha3Code","region","subregion","population","toLocaleString","languages","map","language","key","CountryList","countries","error","Array","isArray","components_Country","Regions","regions","distinctRegions","Object","toConsumableArray","Set","filter","x","length","regionCount","Totals","regionList","subRegionList","components_Regions","e","setCountries","preventDefault","axios","get","concat","then","response","data","console","log","App","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","_useState5","_useState6","components_Header","Paper","components_SearchType","onSubmit","noValidate","components_SearchBar","components_SubmitButton","components_CountryList","components_Totals","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"+KASeA,EANA,WACX,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAClBH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKC,cAAY,GAApD,iEC2BOC,EAxBI,SAAAC,GAAmC,IAAhCC,EAAgCD,EAAhCC,WAAYC,EAAoBF,EAApBE,cAK9B,OACIX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAaN,UAAU,YACnBN,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWP,UAAU,UAArB,cACAN,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACIC,aAAW,YACXC,KAAK,WACLC,MAAOP,EACPQ,SAZhB,SAAsBC,GAClBR,EAAcQ,EAAMC,OAAOH,SAafjB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAkBJ,MAAM,OAAOK,QAAStB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,MAAWC,MAAM,SACzDxB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAkBJ,MAAM,WAAWK,QAAStB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,MAAWC,MAAM,cAC7DxB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAkBJ,MAAM,OAAOK,QAAStB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,MAAWC,MAAM,qCCF9DC,EApBG,SAAAhB,GAAqC,IAAlCiB,EAAkCjB,EAAlCiB,MAAOC,EAA2BlB,EAA3BkB,SAAUjB,EAAiBD,EAAjBC,WAMlC,IAAMkB,EAAkC,aAAflB,EAA4B,YAAcA,EAEnE,OACIV,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CACIC,GAAG,aACHN,MAAOI,EACPzB,UAAW,cACXc,MAAOS,EACPR,SAbR,SAAsBC,GAClBQ,EAASR,EAAMC,OAAOH,QAalBc,OAAO,qBCNJC,EATM,SAAAvB,GAAsB,IAAnBwB,EAAmBxB,EAAnBwB,aACpB,OACIjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAQC,KAAK,SAAS9B,QAAQ,YAAY+B,MAAM,UAAUjC,UAAU,gBAAgBkC,QAASJ,GAA7F,6BC8BOK,EA9BC,SAAA7B,GAAiB,IAAd8B,EAAc9B,EAAd8B,QAEf,OACIvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAMrC,UAAU,gBACZH,EAAAC,EAAAC,cAACuC,EAAA,EAAD,KACIzC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYD,UAAU,eAAeE,QAAQ,KAAKC,UAAU,MAAMiC,EAAQvB,MAC1EhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKwC,IAAI,OAAOC,IAAKJ,EAAQK,QAEjC5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,KAAtC,YAAoDiC,EAAQM,YAC5D7C,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,KAAtC,YAAoDiC,EAAQO,YAC5D9C,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,KAAtC,WAAmDiC,EAAQQ,QAC3D/C,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,KAAtC,cAAsDiC,EAAQS,WAC9DhD,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,KAAtC,eAAuDiC,EAAQU,WAAWC,kBAC1ElD,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,KAAtC,cACAN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACToC,EAAQY,UAAUC,IAAI,SAACC,GACpB,OAAOrD,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,KAAKgD,IAAKD,EAASrC,MAAOqC,EAASrC,cCXjGuC,EATK,SAAA9C,GAAmB,IAAhB+C,EAAgB/C,EAAhB+C,UACnB,OACIxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACVqD,EAAUC,OAASzD,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,MAAMkD,EAAUC,OACzEC,MAAMC,QAAQH,IAAcA,EAAUJ,IAAI,SAACb,GAAD,OAAavC,EAAAC,EAAAC,cAAC0D,EAAD,CAASN,IAAKf,EAAQvB,KAAMuB,QAASA,gBCW1FsB,EAjBC,SAAApD,GAAiB,IAAdqD,EAAcrD,EAAdqD,QAETC,EAAeC,OAAAC,EAAA,EAAAD,CAAO,IAAIE,IAAIJ,IAMpC,OACI9D,EAAAC,EAAAC,cAAA,UACK6D,EAAgBX,IAAI,SAAAL,GACjB,OAAO/C,EAAAC,EAAAC,cAAA,MAAIoD,IAAKP,GAASA,EAAlB,KAPnB,SAAsBA,GAClB,OAAOe,EAAQK,OAAO,SAASC,GAAI,OAAOA,IAAMrB,IAAWsB,OAMhBC,CAAYvB,QCkBhDwB,EAzBA,SAAA9D,GAAmB,IAAhB+C,EAAgB/C,EAAhB+C,UACRgB,EAAahB,EAAUJ,IAAI,SAAAb,GAAO,OAAIA,EAAQQ,SAC9C0B,EAAgBjB,EAAUJ,IAAI,SAAAb,GAAO,OAAIA,EAAQS,YAEvD,OACIhD,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAMrC,UAAU,eACZH,EAAAC,EAAAC,cAACuC,EAAA,EAAD,KACIzC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYD,UAAU,eAAeE,QAAQ,KAAKC,UAAU,MAA5D,oBAAmFkD,EAAUa,QAC7FrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,KAAtC,YACAN,EAAAC,EAAAC,cAACwE,EAAD,CAASZ,QAASU,KAEtBxE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,KAAtC,gBACAN,EAAAC,EAAAC,cAACwE,EAAD,CAASZ,QAASW,mBCX9C,SAASxC,EAAa0C,EAAGxC,EAAMT,EAAOkD,GACrCD,EAAEE,iBACFC,IAAMC,IAAN,+BAAAC,OAAyC7C,EAAzC,WAAA6C,OAAuDtD,IACrDuD,KAAK,SAAAC,GACL,GAAIA,EAASC,KAAK1B,MACjBmB,EAAa,CAACnB,MAASyB,EAASC,KAAK1B,QACrC2B,QAAQC,IAAIH,EAASC,KAAK1B,WACpB,CACN,IAAID,EAAY0B,EAASC,KAEzB3B,EAAYE,MAAMC,QAAQH,GAAaA,EAAY,CAACA,GACpDoB,EAAapB,MAKjB,IAwBe8B,EAxBH,WAAM,IAAAC,EAEmBC,mBAAS,QAF5BC,EAAAzB,OAAA0B,EAAA,EAAA1B,CAAAuB,EAAA,GAEV7E,EAFU+E,EAAA,GAEE9E,EAFF8E,EAAA,GAAAE,EAGSH,mBAAS,IAHlBI,EAAA5B,OAAA0B,EAAA,EAAA1B,CAAA2B,EAAA,GAGVjE,EAHUkE,EAAA,GAGHjE,EAHGiE,EAAA,GAAAC,EAIiBL,mBAAS,IAJ1BM,EAAA9B,OAAA0B,EAAA,EAAA1B,CAAA6B,EAAA,GAIVrC,EAJUsC,EAAA,GAIClB,EAJDkB,EAAA,GAMjB,OACC9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAC6F,EAAD,MACA/F,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAO7F,UAAU,gBAChBH,EAAAC,EAAAC,cAAC+F,EAAD,CAAYvF,WAAYA,EAAYC,cAAeA,IACnDX,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAS+F,SAAU,SAACvB,GAAD,OAAO1C,EAAa0C,EAAGjE,EAAYgB,EAAOkD,IAAeuB,YAAU,GACrGnG,EAAAC,EAAAC,cAACkG,EAAD,CAAW1F,WAAYA,EAAYgB,MAAOA,EAAOC,SAAUA,IAC3D3B,EAAAC,EAAAC,cAACmG,EAAD,CAAcpE,aAAc,SAAC0C,GAAD,OAAO1C,EAAa0C,EAAGjE,EAAYgB,EAAOkD,QAGxE5E,EAAAC,EAAAC,cAACoG,EAAD,CAAa9C,UAAWA,IACvBA,EAAUa,OAAS,GACnBrE,EAAAC,EAAAC,cAACqG,EAAD,CAAQ/C,UAAWA,MCzCvBgD,IAASC,OAAOzG,EAAAC,EAAAC,cAACwG,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.90da1785.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Header = () => {\r\n    return <div className=\"pageHeader\">\r\n        <Typography variant=\"h2\" component=\"h2\" gutterBottom>Country Search</Typography>\r\n    </div>\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\n// Provides the radio buttons users choose to specify their query type\r\nconst SearchType = ({ searchType, setSearchType }) => {\r\n    function handleChange(event){\r\n        setSearchType(event.target.value)\r\n    }\r\n\r\n    return(\r\n        <div className=\"search-type\">\r\n            <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\">Search By:</FormLabel>\r\n                <RadioGroup\r\n                    aria-label=\"Search By\"\r\n                    name=\"searchBy\"\r\n                    value={searchType}\r\n                    onChange={handleChange}\r\n                >\r\n                    <FormControlLabel value=\"name\" control={<Radio />} label=\"Name\" />\r\n                    <FormControlLabel value=\"fullName\" control={<Radio />} label=\"Full Name\" />\r\n                    <FormControlLabel value=\"code\" control={<Radio />} label=\"Code (2 or 3 digit)\" />\r\n                </RadioGroup>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchType","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst SearchBar = ({ query, setQuery, searchType }) => {\r\n    function handleChange(event){\r\n        setQuery(event.target.value);\r\n    }\r\n\r\n    // cleaning up format of search bar label\r\n    const friendlyTypeName = searchType === \"fullName\" ? \"full name\" : searchType;\r\n\r\n    return(\r\n        <TextField\r\n            id=\"search-bar\"\r\n            label={friendlyTypeName}\r\n            className={\"searchInput\"}\r\n            value={query}\r\n            onChange={handleChange}\r\n            margin=\"normal\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default SearchBar","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst SubmitButton = ({ submitSearch }) => {\r\n    return(\r\n        <Button type=\"button\" variant=\"contained\" color=\"primary\" className=\"submit-button\" onClick={submitSearch}>\r\n            Search\r\n        </Button>\r\n    )\r\n}\r\n\r\n\r\nexport default SubmitButton","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Country = ({ country }) => {\r\n\r\n    return(\r\n        <Card className=\"country-card\">\r\n            <CardContent>\r\n                <Typography className=\"country-name\" variant=\"h5\" component=\"h2\">{country.name}</Typography>\r\n                <div className=\"country-details\">\r\n                    <div className=\"country-flag\">\r\n                        <img alt=\"flag\" src={country.flag} />\r\n                    </div>\r\n                    <div className=\"country-data\">\r\n                        <Typography variant=\"body2\" component=\"p\">Alpha 2: {country.alpha2Code}</Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">Alpha 3: {country.alpha3Code}</Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">Region: {country.region}</Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">Subregion: {country.subregion}</Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">Population: {country.population.toLocaleString()}</Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">Languages:</Typography>\r\n                        <ul className=\"language-list\">\r\n                            {country.languages.map((language) => {\r\n                                return <Typography variant=\"body2\" component=\"li\" key={language.name}>{language.name}</Typography>\r\n                            }\r\n                            )}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Country","import React from 'react';\r\nimport Country from './Country';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst CountryList = ({ countries }) => {\r\n    return (\r\n        <div className=\"country-list\">\r\n            {countries.error && <Typography variant=\"body1\" component=\"h3\">{countries.error}</Typography>}\r\n            {Array.isArray(countries) && countries.map((country) => <Country key={country.name} country={country}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryList","import React from 'react';\r\n\r\nconst Regions = ({ regions} ) => {\r\n    // Creating unique list of regions\r\n    const distinctRegions = [...new Set(regions)];\r\n\r\n    function regionCount (region) {\r\n        return regions.filter(function(x){ return x === region; }).length;\r\n    }\r\n\r\n    return (\r\n        <ul>\r\n            {distinctRegions.map(region => {\r\n                return <li key={region}>{region}: {regionCount(region)}</li>\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Regions","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Regions from './Regions'\r\n\r\nconst Totals = ({ countries }) => {\r\n    const regionList = countries.map(country => country.region);\r\n    const subRegionList = countries.map(country => country.subregion);\r\n\r\n    return (\r\n        <Card className=\"totals-card\">\r\n            <CardContent>\r\n                <Typography className=\"country-name\" variant=\"h5\" component=\"h2\">Total Countries: {countries.length}</Typography>\r\n                <div className=\"totals-content\">\r\n                    <div className=\"regions\">\r\n                        <div className=\"region\">\r\n                            <Typography variant=\"body2\" component=\"p\">Regions:</Typography>\r\n                            <Regions regions={regionList} />\r\n                        </div>\r\n                        <div className=\"region\">\r\n                            <Typography variant=\"body2\" component=\"p\">Sub-regions:</Typography>\r\n                            <Regions regions={subRegionList} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Totals","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport Header from './components/Header';\r\nimport SearchType from './components/SearchType';\r\nimport SearchBar from './components/SearchBar';\r\nimport SubmitButton from './components/SubmitButton';\r\nimport CountryList from './components/CountryList';\r\nimport Totals from './components/Totals';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nfunction submitSearch(e, type, query, setCountries) {\r\n\te.preventDefault();\r\n\taxios.get(`http://localhost:3001/?type=${type}&query=${query}`)\r\n\t\t.then(response => {\r\n\t\t\tif (response.data.error) {\r\n\t\t\t\tsetCountries({'error': response.data.error});\r\n\t\t\t\tconsole.log(response.data.error);\r\n\t\t\t} else {\r\n\t\t\t\tlet countries = response.data;\r\n\t\t\t\t// Accounting for differing formatting of results from REST Countries API\r\n\t\t\t\tcountries = Array.isArray(countries) ? countries : [countries]\r\n\t\t\t\tsetCountries(countries);\r\n\t\t\t}\r\n\t\t})\r\n}\r\n\r\nconst App = () => {\r\n\r\n\tconst [searchType, setSearchType] = useState(\"name\");\r\n\tconst [query, setQuery] = useState(\"\");\r\n\tconst [countries, setCountries] = useState([]);\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Header />\r\n\t\t\t<Paper className=\"search-paper\">\r\n\t\t\t\t<SearchType searchType={searchType} setSearchType={setSearchType} />\r\n\t\t\t\t<form className=\"search\" onSubmit={(e) => submitSearch(e, searchType, query, setCountries)} noValidate>\r\n\t\t\t\t\t<SearchBar searchType={searchType} query={query} setQuery={setQuery} />\r\n\t\t\t\t\t<SubmitButton submitSearch={(e) => submitSearch(e, searchType, query, setCountries)}/>\r\n\t\t\t\t</form>\r\n\t\t\t</Paper>\r\n\t\t\t<CountryList countries={countries} />\r\n\t\t\t{countries.length > 0 &&\r\n\t\t\t\t<Totals countries={countries} />\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}